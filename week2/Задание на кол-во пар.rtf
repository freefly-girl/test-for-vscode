{\rtf1\ansi\ansicpg1251\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset204 PTMono-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red217\green218\blue221;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c87843\c88235\c89412;
}
\paperw12240\paperh15840\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl312\slmult1\partightenfactor0

\f0\fs28 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 >>> import itertools as it\
>>> comb = list(it.combinations(unique_products, 2))\
>>> len(comb)\
\cb3 13861\
\cb1 \uc0\u8232 \
\cb3 >>>\
test = []\
for i in range(len(comb)):\
    t = len(sparse_sales[(sparse_sales[comb[i][0]]==True)&(sparse_sales[comb[i][1]]==True)])\
    if t != 0:\
        test.append(t)\
    i += 1\
\cb1 \uc0\u8232 \
\cb3 >>> len(test)\
9744\
\cb1 \uc0\u8232 \
\cb3 \'d1\'ea\'ee\'eb\'fc\'ea\'ee \'ef\'e0\'f0 \'ef\'f0\'ee\'e4\'f3\'ea\'f2\'ee\'e2 \'ef\'ee\'ea\'f3\'ef\'e0\'eb\'e8 \'e2\'ec\'e5\'f1\'f2\'e5 \'f5\'ee\'f2\'ff \'e1\'fb \'f0\'e0\'e7? \'c7\'e0\'ef\'e8\'f8\'e8\'f2\'e5 \'ee\'f2\'e2\'e5\'f2 \'e2 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe\'a0\cb4 answer\cb3 .\
>>> answer = len(test)\
\cb1 \uc0\u8232 \
}